{"version":3,"sources":["App.jsx","index.js"],"names":["App","props","state","date","Date","activeIndex","curMonth","this","timerID","setInterval","tick","clearInterval","setState","document","querySelector","style","backgroundColor","Math","floor","random","ceil","k","toLocaleString","hour","minute","second","hour12","toLocaleDateString","getMonth","getDate","slice","onClick","changeIndex","className","showVariousDate","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"oNAgDeA,G,wDA5Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAAIC,KACVC,YAAa,GAEf,EAAKC,SAAW,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAN9G,E,gEASE,IAAD,OAClBC,KAAKC,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,O,6CAI9CC,cAAcJ,KAAKC,W,6BAInBD,KAAKK,SAAS,CAACT,KAAM,IAAIC,S,oCAIzBG,KAAKK,SAAS,CAACP,YAAwC,IAA3BE,KAAKL,MAAMG,YAAoB,EAAIE,KAAKL,MAAMG,YAAc,IACxFQ,SAASC,cAAc,QAAQC,MAAMC,gBAArC,cAA8DC,KAAKC,MAAMD,KAAKE,UAAYF,KAAKC,MAAM,KAAOD,KAAKG,KAAK,IAAM,IAAMH,KAAKG,KAAK,IAA5I,YAAmJH,KAAKC,MAAMD,KAAKE,UAAYF,KAAKC,MAAM,KAAOD,KAAKG,KAAK,IAAM,IAAMH,KAAKG,KAAK,IAAjO,YAAwOH,KAAKC,MAAMD,KAAKE,UAAYF,KAAKC,MAAM,KAAOD,KAAKG,KAAK,IAAM,IAAMH,KAAKG,KAAK,IAAtT,O,sCAGcC,GACd,OAAQA,GACN,KAAK,EAAG,OAAOd,KAAKL,MAAMC,KAAKmB,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,UAAWC,QAAQ,IACxH,KAAK,EAAG,OAAOnB,KAAKL,MAAMC,KAAKwB,mBAAmB,SAClD,KAAK,EAAG,OAAOpB,KAAKD,SAASC,KAAKL,MAAMC,KAAKyB,YAAc,IAAMrB,KAAKL,MAAMC,KAAK0B,UAAY,MAAQtB,KAAKL,MAAMC,KAAKwB,mBAAmB,SAASG,OAAO,GACxJ,KAAK,EAAG,OAAOvB,KAAKL,MAAMC,KAAKmB,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWE,QAAQ,IACrG,QAAS,U,+BAIH,IAAD,OACP,OACE,yBAAKK,QAAS,kBAAM,EAAKC,eAAeC,UAAU,OAChD,4BAAK1B,KAAK2B,gBAAgB3B,KAAKL,MAAMG,mB,GAxC3B8B,IAAMC,YCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAAS2B,eAAe,U","file":"static/js/main.f536b051.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      activeIndex: 0,\n    };\n    this.curMonth = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({date: new Date()});\n  }\n\n  changeIndex() {\n    this.setState({activeIndex: this.state.activeIndex === 3 ? 0 : this.state.activeIndex + 1});\n    document.querySelector('.app').style.backgroundColor = `rgb(${Math.floor(Math.random() * (Math.floor(180) - Math.ceil(50) + 1)) + Math.ceil(50)},${Math.floor(Math.random() * (Math.floor(180) - Math.ceil(50) + 1)) + Math.ceil(50)},${Math.floor(Math.random() * (Math.floor(180) - Math.ceil(50) + 1)) + Math.ceil(50)})`;\n  }\n\n  showVariousDate(k) {\n    switch (k) {\n      case 0: return this.state.date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });\n      case 1: return this.state.date.toLocaleDateString('en-US');\n      case 2: return this.curMonth[this.state.date.getMonth()] + ' ' + this.state.date.getDate() + 'th ' + this.state.date.toLocaleDateString('en-US').slice(-2);\n      case 3: return this.state.date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n      default: return;\n    }\n  };\n\n  render() {\n    return (\n      <div onClick={() => this.changeIndex()} className='app'>\n        <h2>{this.showVariousDate(this.state.activeIndex)}</h2>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}